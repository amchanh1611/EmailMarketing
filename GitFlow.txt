GitFlow : chỉ ra cách thức setup các loại branchs khác nhau và cách thức để merge chúng lại với nhau
 - Branchs: - Master: Master branchs có sẵn trong git và là branchs chứa mã nguồn khởi tạo của ứng dụng
	    - Hotfix: Được base trên nhánh master để sửa nhanh những lỗi trên UIT hoặc sửa những cấu hình đặc biệt chỉ có trên môi trường productions. 
	Khi cần thay đổi cấu hình cho bản release hoặc hotfix ở môi trường production, teamlead sẽ tạo branchs base trên branchs Master để hotfix 
	sau đó merge lại vào Master (thường thì sẽ không được thay đổi trược tiếp mã nguồn trên branch master nên phải lm cách này)
	    - Release: Trước khi Release một phần mềm dev team cần được tạo ra để kiểm tra lại lần cuối trước đi release sản phần để người dùng có thể sử dụng 
				(Thông thường mã nguồn tại thời điểm này sẽ tạo ra bản build để test và kiểm tra lại bussiness)
	    - Develop: Được khởi tạo từ master branches để lưu lại tất cả lịch sử thay đổi của mã nguồn. Develop branchs là merge code của tất cả các branchs feature
	    - Feature: Được base trên branchs Develop. Mỗi khi phát triển một feature mới chúng ta cần tạo một branchs để việt mã nguồn cho từng feature.

Lưu ý khi sử dụng Git:
 - Sử dung merge request: - tạo merge request để teamlead hoặc review có thể review mã nguồn trước khi merge để đảm bảo tính toàn vẹn của mã nguồn
			  - người review sẽ comment trực tiếp cần thay đổi lên merge request để giảm thời gian trao đổi tăng tính hiệu quả khi làm việc nhóm.
			  - hứ ba, tạo merge request để lưu lại lịch sử thay đổi của mã nguồi.Khi có vấn đề về lỗi, chất lượng phần mềm.... chúng ta có thể xem lại tất cả những sự thay đổi trên từ dòng code 
 - conflict code: 

khởi tạo git flow: git flow init
tao branch feature tu branch develop: git flow feature start NAMEFEATURE
merge branch feature vao branch develop: git flow feature finish NAMEFEATURE
Push code len branch feature: git flow feature publish MYFEATURE
pull code tu branch feature ve may: git flow feature pull REMOTE_NAME MYFEATURE